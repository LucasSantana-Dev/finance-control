<?xml version="1.0"?>
<ruleset name="Finance Control PMD Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>
        PMD rules for Finance Control project
        Enforces code quality standards and best practices
    </description>

    <!-- Exclude patterns -->
    <exclude-pattern>*/target/*</exclude-pattern>
    <exclude-pattern>*/generated/*</exclude-pattern>
    <exclude-pattern>*/test/*</exclude-pattern>

    <!-- Best Practices -->
    <rule ref="category/java/bestpractices.xml">
        <priority>3</priority>
    </rule>

    <!-- Code Style -->
    <rule ref="category/java/codestyle.xml">
        <priority>3</priority>
    </rule>

    <!-- Design -->
    <rule ref="category/java/design.xml">
        <priority>3</priority>
    </rule>

    <!-- Documentation -->
    <rule ref="category/java/documentation.xml">
        <priority>4</priority>
    </rule>

    <!-- Error Prone -->
    <rule ref="category/java/errorprone.xml">
        <priority>2</priority>
    </rule>

    <!-- Performance -->
    <rule ref="category/java/performance.xml">
        <priority>3</priority>
    </rule>

    <!-- Security -->
    <rule ref="category/java/security.xml">
        <priority>2</priority>
    </rule>

    <!-- Multithreading -->
    <rule ref="category/java/multithreading.xml">
        <priority>3</priority>
    </rule>

    <!-- Custom rule configurations -->
    
    <!-- Exclude some overly strict rules -->
    <rule ref="category/java/bestpractices.xml/GuardLogStatement">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/bestpractices.xml/GuardLogStatementJavaUtil">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/codestyle.xml/AtLeastOneConstructor">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/codestyle.xml/OnlyOneReturn">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/design.xml/ExcessiveClassLength">
        <priority>4</priority>
        <properties>
            <property name="minimum" value="1000"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/ExcessivePublicCount">
        <priority>4</priority>
        <properties>
            <property name="minimum" value="30"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/TooManyFields">
        <priority>4</priority>
        <properties>
            <property name="maxfields" value="20"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/TooManyMethods">
        <priority>4</priority>
        <properties>
            <property name="maxmethods" value="25"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/TooManyPublicMethods">
        <priority>4</priority>
        <properties>
            <property name="maxmethods" value="20"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/CyclomaticComplexity">
        <priority>3</priority>
        <properties>
            <property name="reportLevel" value="10"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/ExcessiveMethodLength">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="100"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/NPathComplexity">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="200"/>
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml/TooManyPublicMethods">
        <priority>3</priority>
        <properties>
            <property name="maxmethods" value="15"/>
        </properties>
    </rule>
    
    <!-- Security rules with custom configurations -->
    <rule ref="category/java/security.xml/HardCodedCryptoKey">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureCryptoIv">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureCryptoMode">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureCryptoPadding">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureRandom">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureSSLSocketProtocol">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureTrustManager">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/security.xml/InsecureCryptoIv">
        <priority>1</priority>
    </rule>
    
    <!-- Performance rules -->
    <rule ref="category/java/performance.xml/AvoidInstantiatingObjectsInLoops">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/InefficientEmptyStringCheck">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/InefficientStringBuffering">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/OptimizableToArrayCall">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/RedundantFieldInitializer">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/StringInstantiation">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/StringToString">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/performance.xml/UnnecessaryWrapperObjectCreation">
        <priority>3</priority>
    </rule>
    
    <!-- Error prone rules -->
    <rule ref="category/java/errorprone.xml/AssignmentInOperand">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidCatchingGenericException">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidCatchingNPE">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
        <priority>3</priority>
        <properties>
            <property name="maxDuplicateLiterals" value="3"/>
            <property name="minimumLength" value="3"/>
            <property name="skipAnnotations" value="true"/>
        </properties>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
        <priority>4</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/BrokenNullCheck">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CheckResultSet">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CloneThrowsCloneNotSupportedException">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CloseResource">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod">
        <priority>1</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/DoNotExtendJavaLangError">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/DontCallThreadRun">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
        <priority>3</priority>
        <properties>
            <property name="allowExceptionNameRegex" value="^(ignored|expected)$"/>
        </properties>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyFinallyStatement">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyIfStmt">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyInitializer">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyStatementBlock">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptySwitchStatements">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyTryBlock">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EmptyWhileStmt">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/EqualsNull">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ForLoopCanBeForeach">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ForLoopVariableCount">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ForLoopsMustUseBraces">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/IfElseStmtsMustUseBraces">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/IfStmtsMustUseBraces">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/InstantiationToGetClass">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/InvalidLogMessageFormat">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/InvalidSlf4jMessageFormat">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/JumbledIncrementer">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/JUnitAssertionsShouldIncludeMessage">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/JUnitSpelling">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/JUnitTestContainsTooManyAsserts">
        <priority>3</priority>
        <properties>
            <property name="maximumAsserts" value="5"/>
        </properties>
    </rule>
    
    <rule ref="category/java/errorprone.xml/JUnitUseExpected">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MisplacedDefaultLabel">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MisplacedNullCheck">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MissingBreakInSwitch">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MissingSerialVersionUID">
        <priority>3</priority>
        <properties>
            <property name="ignore" value="true"/>
        </properties>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MissingSerialVersionUID">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/MoreThanOneLogger">
        <priority>3</priority>
        <properties>
            <property name="allowStaticLogger" value="true"/>
        </properties>
    </rule>
    
    <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/NonStaticInitializer">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/NullAssignment">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ProperCloneImplementation">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ProperLogger">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ReturnEmptyArrayRatherThanNull">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SimplifyBooleanAssertion">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SimplifyBooleanExpressions">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SimplifyBooleanReturns">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SimplifyConditional">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SimplifyStartsWith">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SingleMethodSingleton">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SingularField">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/StaticEJBFieldShouldBeFinal">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/TestClassWithoutTestCases">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnconditionalIfStatement">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryBooleanReturn">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryFinalModifier">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryLocalBeforeReturn">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryModifier">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryNullCheck">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryNullCheckBeforeInstanceOf">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessaryReturn">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnnecessarySelfAssignment">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnusedAssignment">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnusedLocalVariable">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnusedPrivateField">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UnusedPrivateMethod">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging">
        <priority>2</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UselessOverridingMethod">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UselessParentheses">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UselessStringValueOf">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions">
        <priority>3</priority>
    </rule>
    
    <rule ref="category/java/errorprone.xml/WhileLoopsMustUseBraces">
        <priority>3</priority>
    </rule>

</ruleset> 